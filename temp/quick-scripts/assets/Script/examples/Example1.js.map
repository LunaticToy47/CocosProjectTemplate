{"version":3,"sources":["Example1.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\examples","sourcesContent":["import { Type, Unit, unit } from \"../basic/Types\";\r\nimport { BehaviorSubject, Subject } from \"rxjs\";\r\nimport { TOUCH_END } from \"../basic/Constants\";\r\nimport { __, add, always } from \"ramda\"\r\nimport { modify } from \"../basic/BaseFunction\";\r\nimport { BaseComponent } from \"../basic/BaseComponent\";\r\n\r\nconst {ccclass, property} = cc._decorator\r\n\r\ninterface State {\r\n    count: BehaviorSubject<number>;\r\n}\r\n\r\ntype Action = Type<\"Inc\", Unit> | Type<\"Dec\", Unit> | Type<\"Set\", number>\r\n\r\n@ccclass\r\nexport class Example1 extends BaseComponent<State, Action> {\r\n    @property(cc.Button)\r\n    minusButton: cc.Button = null;\r\n    @property(cc.Button)\r\n    plusButton: cc.Button = null;\r\n    @property(cc.Label)\r\n    contentLabel: cc.Label = null;\r\n    @property(cc.Button)\r\n    maxButton: cc.Button = null;\r\n\r\n    readonly MAX_SIZE = 999;\r\n\r\n    start () {\r\n        this.actions = new Subject<Action>();\r\n        this.minusButton.node.on(TOUCH_END, () => this.actions.next({typeName: \"Dec\", value: unit}));\r\n        this.plusButton.node.on(TOUCH_END, () => this.actions.next({typeName: \"Inc\", value: unit}));\r\n        this.maxButton.node.on(TOUCH_END, () => this.actions.next({typeName: \"Set\", value: this.MAX_SIZE}));\r\n        this.state = {\r\n            count: new BehaviorSubject<number>(200)\r\n        };\r\n        this.actions.subscribe(this.eval.bind(this));\r\n        this.state.count.subscribe(this.render.bind(this))\r\n    }\r\n\r\n    render(count: number) {\r\n        this.contentLabel.string = String(count);\r\n    }\r\n\r\n    eval (action: Action) {\r\n        switch (action.typeName) {\r\n            case \"Dec\": {\r\n                let count = this.state.count.getValue();\r\n                if (count > 0) {\r\n                    modify(this.state.count, add(__, -1))\r\n                }\r\n                break;\r\n            }\r\n            case \"Inc\": {\r\n                let count = this.state.count.getValue();\r\n                if (count < this.MAX_SIZE) {\r\n                    modify(this.state.count, add(__, 1))\r\n                }\r\n                break;\r\n            }\r\n            case \"Set\": {\r\n                modify(this.state.count, always(action.value));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}"]}